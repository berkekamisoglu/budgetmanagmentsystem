CREATE DATABASE budget_app;

USE budget_app;

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    role ENUM('ADMIN', 'USER') NOT NULL DEFAULT 'USER'
);

CREATE TABLE categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE transaction_types (
    id INT AUTO_INCREMENT PRIMARY KEY,
    type_name VARCHAR(255) NOT NULL
);

CREATE TABLE establishments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

CREATE TABLE transactions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    category_id INT,
    transaction_type_id INT,
    establishment_id INT,
    amount DECIMAL(10, 2),
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (category_id) REFERENCES categories(id),
    FOREIGN KEY (transaction_type_id) REFERENCES transaction_types(id),
    FOREIGN KEY (establishment_id) REFERENCES establishments(id)
);

CREATE TABLE goals (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    goal_name VARCHAR(255),
    target_amount DECIMAL(10, 2),
    current_amount DECIMAL(10, 2),
    due_date DATE,
    deadline DATE,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE period_reports (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    period_start DATE,
    period_end DATE,
    total_income DECIMAL(10, 2),
    total_expense DECIMAL(10, 2),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE notifications (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    message TEXT,
    seen BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE TABLE regular_payments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    payment_type VARCHAR(255),
    amount DOUBLE,
    frequency VARCHAR(50),
    next_payment_date DATE,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE balances (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT,
    balance DECIMAL(10, 2) DEFAULT 0.00,
    FOREIGN KEY (user_id) REFERENCES users(id)
);




INSERT INTO users (username, password) VALUES ('serdar', '1234');
INSERT INTO users (username, password) VALUES ('berke', '1234');
INSERT INTO categories (name) VALUES ('Market');
INSERT INTO categories (name) VALUES ('Ulaşım ve Akaryakıt');
INSERT INTO categories (name) VALUES ('Eğlence ve Hobiler ');
INSERT INTO categories (name) VALUES ('Giyim ve Aksesuar');
INSERT INTO categories (name) VALUES ('Sağlık ve Kişisel Bakım');
INSERT INTO categories (name) VALUES ('Ev ve Fatura Giderleri');
INSERT INTO categories (name) VALUES ('Maaş');
INSERT INTO transaction_types (type_name) VALUES ('Gelir');
INSERT INTO transaction_types (type_name) VALUES ('Gider');
SELECT * FROM transaction_types;
SELECT * FROM regular_payments;
SELECT amount, category_id, transaction_type_id FROM transactions

SET SQL_SAFE_UPDATES = 0;
UPDATE users SET role = 'ADMIN' WHERE username = 'berke'; 

INSERT INTO notifications (user_id, message) VALUES (1, 'Düzenli ödeme hatırlatması: Elektrik faturası yaklaşıyor');  
INSERT INTO notifications (user_id, message) VALUES (1, 'Aylık bütçe hedefinin %80\'ine ulaştınız');  
INSERT INTO notifications (user_id, message) VALUES (1, 'Geçen aya göre harcamalarınız %15 azaldı');  
INSERT INTO notifications (user_id, message) VALUES (1, 'Finansal hedefinize ulaşmaya 1000 TL kaldı');  
INSERT INTO notifications (user_id, message) VALUES (1, 'Yeni bir düzenli ödeme eklediniz: İnternet Faturası');